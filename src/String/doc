In java, string is basically an object that represents sequence of char values. An array
  of characters works same as java string.
 Java String class provides a lot of methods to perform operations on strings such as compare(), concat(), equals(), split(),
 length(), replace(), compareTo(), intern(), substring() etc.
 For example:

In java, string objects are immutable. Immutable simply means unmodifiable or unchangeable.
Once string object is created its data or state can't be changed. Whenever we change any string, a new instance is created.
but a new string object is created.

How to create a string object?
  There are two ways to create String object:
  1. By string literal
     String s="welcome";
     Each time you create a string literal, the JVM checks the "string constant pool" first. If the string already exists in the pool,
     a reference to the pooled instance is returned. If the string doesn't exist in the pool, a new string instance is created and
     placed in the pool. For example:
     String s1="Welcome";
     String s2="Welcome";//It doesn't create a new instance
     Note: String objects are stored in a special memory area known as the "string constant pool".


  2. By new keyword
     In such case, JVM will create a new string object in normal (non-pool) heap memory, and the literal "Welcome" will be placed
     in the string constant pool. The variable s will refer to the object in a heap (non-pool).

Why string objects are immutable in java?
Because java uses the concept of string literal.Suppose there are 5 reference variables,
all refers to one object "sachin".If one reference variable changes the value of the object,
it will be affected to all the reference variables. That is why string objects are immutable in java.

What is mutable string
A string that can be modified or changed is known as mutable string. StringBuffer and StringBuilder
classes are used for creating mutable string.

SubString ?
A part of string is called substring. In other words, substring is a subset of another string.
In case of substring startIndex is inclusive and endIndex is exclusive.
Returns a new string that is a substring of this string. The substring begins at the specified beginIndex and extends to the character at index endIndex â€“ 1. Thus the length of the substring is endIndex-beginIndex. In other words you can say that beginIndex is inclusive and endIndex is exclusive while getting the substring.

